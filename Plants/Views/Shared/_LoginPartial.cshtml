@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using Plants.Services.UserService
@inject IUserService service

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<div style="font-family: 'Open Sans', serif; font-weight: 500">

	@if (SignInManager.IsSignedIn(User))
	{
		<div class="d-flex align-items-center">

			@if (User.IsInRole(Admin))
			{
				<a asp-controller="Plant" asp-action="Add">ADD PLANT</a>
				<a asp-controller="Pet" asp-action="Add">ADD PET</a>
				<a asp-controller="City" asp-action="Add">ADD CITY</a>
			}
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">LOGOUT</button>
			</form>
			@{
				var userTier = await service.FindUserByIdAsync(User.Id());

				if (userTier != null)
				{
					var tier = (int)userTier;
					<a asp-area="Identity" asp-page="/Account/Manage/Email"><img src="~/img/tiers/@(tier).png"></a>
				}
			}
		</div>
	}
	else
	{
		<a asp-area="Identity" asp-page="/Account/Register">REGISTER</a>
		<a asp-area="Identity" asp-page="/Account/Login">LOGIN</a>

		<a asp-area="Identity" asp-page="/Account/Manage/Email"><img src="~/img/tiers/0.png"></a>
	}
</div>
