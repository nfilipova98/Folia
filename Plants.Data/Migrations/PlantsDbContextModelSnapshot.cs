// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plants.Data;

#nullable disable

namespace Plants.Data.Migrations
{
    [DbContext(typeof(PlantsDbContext))]
    partial class PlantsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserPlant", b =>
                {
                    b.Property<int>("LikedPlantsId")
                        .HasColumnType("int");

                    b.Property<string>("UsersLikedPlantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LikedPlantsId", "UsersLikedPlantId");

                    b.HasIndex("UsersLikedPlantId");

                    b.ToTable("ApplicationUsersLikedPlants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PetPlant", b =>
                {
                    b.Property<int>("PetsId")
                        .HasColumnType("int");

                    b.Property<int>("PlantsId")
                        .HasColumnType("int");

                    b.HasKey("PetsId", "PlantsId");

                    b.HasIndex("PlantsId");

                    b.ToTable("PetPlant");
                });

            modelBuilder.Entity("PetUserConfiguration", b =>
                {
                    b.Property<int>("PetsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("PetsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("PetUserConfiguration");
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstTimeLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tier")
                        .HasColumnType("int")
                        .HasComment("Profile tier");

                    b.Property<int>("TierPoints")
                        .HasColumnType("int")
                        .HasComment("Profile tier points");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("UserConfigurationIsNull")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UsersConfigurationId")
                        .HasColumnType("int")
                        .HasComment("Additional profile configuration");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("ApplicationUsers", (string)null);
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Country name");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bulgaria"
                        });
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasComment("Country identifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(165)
                        .HasColumnType("nvarchar(165)")
                        .HasComment("Region name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Varna"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Sofia"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Plovdiv"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Veliko Tarnovo"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            Name = "Silistra"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "Burgas"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Name = "Gabrovo"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            Name = "Sliven"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            Name = "Haskovo"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            Name = "Pleven"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 1,
                            Name = "Vidin"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 1,
                            Name = "Vratsa"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 1,
                            Name = "Kyustendil"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 1,
                            Name = "Targovishte"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 1,
                            Name = "Dobrich"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 1,
                            Name = "Razgrad"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 1,
                            Name = "Montana"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 1,
                            Name = "Lovech"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 1,
                            Name = "Ruse"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 1,
                            Name = "Shumen"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 1,
                            Name = "Yambol"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 1,
                            Name = "Smolyan"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 1,
                            Name = "Kurdzhali"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 1,
                            Name = "Pazardzhik"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 1,
                            Name = "Blagoevgrad"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 1,
                            Name = "Montana"
                        });
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.UserConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("User identifier");

                    b.Property<bool>("Kids")
                        .HasColumnType("bit");

                    b.Property<int>("Lifestyle")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int")
                        .HasComment("Region identifier");

                    b.Property<string>("UserPictureUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Profile picture");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("RegionId");

                    b.ToTable("UserConfigurations");
                });

            modelBuilder.Entity("Plants.Data.Models.Comment.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("User identifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasComment("Comment content");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlantId")
                        .HasColumnType("int")
                        .HasComment("Plant identifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("PlantId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Plants.Data.Models.Pet.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Pet type");

                    b.HasKey("Id");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dog"
                        });
                });

            modelBuilder.Entity("Plants.Data.Models.Plant.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Plant image");

                    b.Property<bool>("IsTrending")
                        .HasColumnType("bit");

                    b.Property<bool>("KidSafe")
                        .HasColumnType("bit");

                    b.Property<int>("Lifestyle")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasComment("Plant common name");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Plant scientific name");

                    b.HasKey("Id");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Buddhist Pine, scientifically known as Podocarpus Macrophyllus, is an easy-care evergreen shrub that delights gardeners and plant enthusiasts alike. With its lush green foliage and graceful, upright growth habit, this plant adds a touch of elegance to any outdoor space. Its botanical name, Podocarpus Macrophyllus, reflects its large, glossy leaves that bring a refreshing aesthetic to gardens and landscapes. Thriving in moderate humidity levels, the Buddhist Pine is a versatile plant that adapts well to various environmental conditions, making it suitable for a wide range of climates. Its low maintenance nature makes it an excellent choice for both novice and experienced gardeners seeking a hassle-free addition to their outdoor greenery. One of the notable features of the Buddhist Pine is its child-friendly nature, making it a safe and worry-free option for households with children or pets. Its non-toxic properties ensure peace of mind for parents and pet owners alike. Embracing a traveler lifestyle, this plant is perfect for those who frequently find themselves on the move. Its adaptability to different outdoor settings and minimal care requirements make it an ideal companion for globetrotters and outdoor enthusiasts seeking a touch of greenery wherever they go. As an outdoor plant, the Buddhist Pine thrives in natural sunlight, flourishing under open skies and gentle breezes. Whether planted as a standalone specimen or incorporated into garden beds and borders, its presence adds a timeless charm to any outdoor setting. In line with current trends, the Buddhist Pine has gained popularity among gardening enthusiasts and landscape designers alike. Its classic appeal and easygoing nature make it a sought-after choice for those looking to enhance their outdoor spaces with a touch of understated elegance.",
                            Difficulty = 0,
                            Humidity = 1,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/0.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Buddhist Pine",
                            ScientificName = "Podocarpus Macrophyllus"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Spider Plant, scientifically known as Chlorophytum comosum, is a resilient and popular choice for both beginner and seasoned plant enthusiasts alike. True to its name, its slender, arching leaves resemble spider legs, lending an elegant and distinctive appearance to any indoor space. Thriving in moderate humidity levels, the Spider Plant is relatively undemanding when it comes to care, making it an ideal addition to households with varying environmental conditions. Its preference for moderate humidity levels makes it adaptable to a wide range of indoor environments. One of its standout features is its suitability for homes with children, as it is considered safe for kids and pets. This characteristic, combined with its easy care requirements, makes it a top choice for families looking to introduce greenery into their living spaces without worry. For individuals with active lifestyles or frequent travelers, the Spider Plant is particularly appealing. Its easygoing nature means it can withstand periods of neglect and irregular watering, making it a reliable companion for those who may be away from home frequently. Although the Spider Plant is primarily an indoor plant, its versatility allows it to thrive in a variety of indoor settings, from bright, well-lit rooms to those with lower light conditions. Its adaptability further enhances its appeal, as it can easily find a place in different areas of the home, bringing a touch of natural beauty wherever it's placed.",
                            Difficulty = 0,
                            Humidity = 1,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/13.jpg",
                            IsTrending = false,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Spider plant",
                            ScientificName = "Chlorophytum comosum"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The Rubber Fig, scientifically known as Ficus elastica, is a stunning addition to any indoor garden. With its glossy, deep green leaves and sturdy, upright growth habit, it adds a touch of elegance to any room it inhabits. This plant is a perfect choice for both novice and experienced plant parents due to its easy-care nature. Its resilience and adaptability make it an excellent option for those new to plant care or those seeking low-maintenance greenery. Thriving in environments with high humidity levels, the Rubber Fig is ideal for spaces where moisture levels can be easily controlled, such as bathrooms or kitchens. Its preference for high humidity ensures that it remains healthy and vibrant even in dry indoor environments. Families with children or pets will appreciate the Rubber Fig's safe nature, as it is non-toxic and considered kid-friendly. This characteristic allows it to be placed in any room of the house without concern for the safety of curious little ones or furry friends. For individuals leading busy lives or frequent travelers, the Rubber Fig is an excellent companion. Its ability to tolerate occasional neglect and irregular watering makes it a resilient choice for those who may not always have time to devote to plant care. While primarily an indoor plant, the Rubber Fig can be placed in a variety of indoor settings, from bright, sunlit rooms to areas with lower light levels. Its versatility in light requirements allows it to thrive in different environments, making it a versatile addition to any indoor space.",
                            Difficulty = 0,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/10.jpg",
                            IsTrending = false,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Rubber fig",
                            ScientificName = "Ficus elastica"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The Areca Palm, scientifically known as Dypsis lutescens, brings a touch of tropical elegance to both indoor and outdoor spaces. With its graceful fronds and slender, bamboo-like stems, it adds a sense of lushness and tranquility to any environment it graces. This palm species is an excellent choice for plant enthusiasts of all levels, as it is relatively easy to care for and maintain. Its adaptable nature allows it to thrive in various conditions, making it a popular option for both beginners and seasoned gardeners alike.Preferring moderate humidity levels, the Areca Palm is well-suited to indoor environments where humidity can be controlled. However, its versatility also extends to outdoor settings, where it can flourish in mild climates with moderate humidity levels. Families with children and pets will appreciate the Areca Palm's non-toxic nature, as it poses no harm if accidentally ingested. Its safety makes it a fantastic choice for households with curious little ones or furry companions. For individuals with active lifestyles or frequent travelers, the Areca Palm is an ideal companion. Its low-maintenance requirements and resilience to occasional neglect make it a reliable option for those who may not always have time to devote to plant care. While it can thrive both indoors and outdoors, the Areca Palm truly shines when given the opportunity to bask in natural sunlight. Its ability to flourish in outdoor settings makes it a versatile choice for landscaping, adding a touch of tropical beauty to gardens, patios, and balconies alike.",
                            Difficulty = 0,
                            Humidity = 1,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/12.jpg",
                            IsTrending = false,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Areca palm",
                            ScientificName = "Dypsis lutescens"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The Watermelon Peperomia, scientifically known as Peperomia argyreia, is a charming and distinctive houseplant that adds a pop of color and personality to any indoor space. With its striking foliage resembling the rind of a watermelon, this plant is sure to capture attention and become a favorite among plant enthusiasts. Caring for the Watermelon Peperomia is a delight, as it falls under the category of easy-care plants. Its low-maintenance nature makes it an excellent choice for both novice and experienced plant parents alike. With just a little attention, it will thrive and continue to display its vibrant beauty. This plant thrives in environments with high humidity levels, making it well-suited for areas such as bathrooms or kitchens where moisture levels tend to be higher. Its preference for humidity ensures that its lush leaves remain healthy and vibrant, adding a refreshing touch to indoor spaces. Families with children and pets can enjoy the Watermelon Peperomia worry-free, as it is considered safe for both humans and animals. Its non-toxic properties make it a fantastic choice for households with curious little ones or furry companions. The Watermelon Peperomia fits seamlessly into the lifestyle of those who fall in between busy and laid-back. Its moderate care requirements mean that it can thrive with regular but not overly demanding attention, making it an ideal choice for individuals with varied schedules and commitments. While primarily an indoor plant, the Watermelon Peperomia does not thrive in outdoor settings. Its preference for stable indoor conditions makes it unsuitable for placement outside, but its captivating beauty ensures that it will become a cherished addition to any indoor garden or plant collection.",
                            Difficulty = 0,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/11.jpg",
                            IsTrending = false,
                            KidSafe = true,
                            Lifestyle = 1,
                            Name = "Watermelon Peperomia",
                            ScientificName = "Peperomia argyreia"
                        },
                        new
                        {
                            Id = 6,
                            Description = "The Snake Plant, scientifically known as Dracaena trifasciata, is a hardy and visually striking addition to any indoor space. With its upright, sword-shaped leaves featuring distinctive variegated patterns, this plant adds a touch of modern elegance to both contemporary and traditional settings. Renowned for its easy-care nature, the Snake Plant is an ideal choice for plant enthusiasts of all levels, including beginners. Its tolerance to neglect and ability to thrive in various conditions make it a popular option for those seeking low-maintenance greenery. Thriving in environments with high humidity levels, the Snake Plant is well-suited for placement in areas such as bathrooms or kitchens where moisture levels are naturally elevated. Its preference for humidity ensures that its foliage remains healthy and vibrant, even in indoor environments. Families with children and pets can safely enjoy the presence of the Snake Plant, as it is considered non-toxic and safe for both humans and animals. Its sturdy leaves and robust growth habit make it a resilient choice for households with curious little ones or furry companions. For individuals with busy lifestyles or frequent travelers, the Snake Plant is an excellent companion. Its ability to tolerate occasional neglect and survive with infrequent watering makes it an ideal choice for those who may not always have time to dedicate to plant care. While primarily an indoor plant, the Snake Plant does not thrive in outdoor settings and is best suited for indoor cultivation. Its adaptability to various light conditions, including low light, further enhances its versatility, making it a versatile addition to any indoor garden or plant collection.",
                            Difficulty = 0,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/1.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Snake Plant",
                            ScientificName = "Dracaena Trifasciata"
                        },
                        new
                        {
                            Id = 7,
                            Description = "The Swiss Cheese Plant, scientifically known as Monstera minima, is a captivating tropical species that brings an exotic touch to both indoor and outdoor spaces. With its unique fenestrated leaves resembling Swiss cheese, this plant is sure to become a focal point in any botanical collection. Known for its ease of care, the Swiss Cheese Plant is an excellent choice for plant enthusiasts of all levels. Its low-maintenance requirements make it particularly appealing to beginners seeking a visually striking yet undemanding plant to adorn their living spaces. Thriving in environments with high humidity levels, the Swiss Cheese Plant is well-suited for placement in areas where moisture levels are naturally elevated, such as bathrooms or kitchens. Its preference for humidity ensures that its lush foliage remains healthy and vibrant, even in indoor environments. While its striking appearance may attract the attention of children and pets, it's essential to note that the Swiss Cheese Plant is not considered safe for consumption and should be kept out of reach of curious little ones and pets. For individuals with active lifestyles or frequent travelers, the Swiss Cheese Plant is an excellent option. Its ability to tolerate occasional neglect and survive with infrequent watering makes it an ideal choice for those who may not always have time to devote to plant care. Additionally, the Swiss Cheese Plant's adaptability extends beyond indoor environments, as it can also thrive outdoors in suitable climates. Its versatility allows it to be incorporated into garden landscapes or patio settings, where its tropical allure can be fully appreciated. Whether gracing indoor living spaces or outdoor retreats, the Swiss Cheese Plant adds a touch of exotic beauty and intrigue, making it a cherished addition to any botanical collection or garden landscape.",
                            Difficulty = 0,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/8.jpg",
                            IsTrending = true,
                            KidSafe = false,
                            Lifestyle = 2,
                            Name = "Swiss cheese plant",
                            ScientificName = "Monstera minima"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The Cherry Laurel Novita, scientifically known as Prunus laurocerasus 'Novita', is a versatile and ornamental evergreen shrub that adds both beauty and functionality to outdoor landscapes. With its dense foliage and upright growth habit, this plant serves as an excellent choice for hedges, borders, or as a standalone specimen in garden settings. Caring for the Cherry Laurel Novita requires a moderate level of attention, placing it in the medium difficulty category. While not overly demanding, it benefits from regular pruning to maintain its desired shape and size, making it suitable for gardeners with some experience in plant care. Thriving in environments with moderate humidity levels, the Cherry Laurel Novita is well-suited for outdoor cultivation in various climates. Its tolerance to a wide range of environmental conditions, including moderate humidity, ensures its adaptability to different garden settings. While its lush foliage and vibrant berries may add visual interest to outdoor landscapes, it's important to note that the Cherry Laurel Novita is not considered safe for consumption, particularly for children and pets. Caution should be exercised to prevent accidental ingestion. For individuals with active lifestyles or frequent travelers, the Cherry Laurel Novita is an excellent choice for outdoor landscaping. Its resilience to occasional neglect and ability to withstand fluctuating weather conditions make it a reliable option for those who may not always have time for intensive garden maintenance. Whether used as a hedge, accent plant, or focal point in garden designs, the Cherry Laurel Novita adds year-round beauty and structure to outdoor spaces, making it a valuable addition to any landscape design scheme.",
                            Difficulty = 1,
                            Humidity = 1,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/2.jpg",
                            IsTrending = true,
                            KidSafe = false,
                            Lifestyle = 2,
                            Name = "Cherry Laurel Novita",
                            ScientificName = "Prunus Laurocerasus Novita"
                        },
                        new
                        {
                            Id = 9,
                            Description = "The Vanuatu Fan Palm, scientifically known as Licuala grandis, is a captivating palm species native to the tropical regions of Vanuatu and surrounding areas. With its large, round, fan-shaped leaves and graceful, arching stems, this palm adds a touch of exotic beauty to outdoor landscapes. Caring for the Vanuatu Fan Palm requires a moderate level of attention, placing it in the medium difficulty category. While not overly demanding, it benefits from regular watering, protection from harsh sunlight, and occasional fertilization to maintain its lush appearance and overall health. Thriving in environments with high humidity levels, the Vanuatu Fan Palm is well-suited for outdoor cultivation in tropical or subtropical climates. Its preference for humidity ensures that it remains vibrant and healthy, even in outdoor settings where moisture levels may fluctuate. Families with children can enjoy the presence of the Vanuatu Fan Palm, as it is considered safe and non-toxic. Its sturdy growth habit and kid-friendly nature make it a suitable addition to outdoor landscapes where children may play and explore. For individuals with active lifestyles or frequent travelers, the Vanuatu Fan Palm is a wonderful choice for outdoor landscaping. Its resilience to occasional neglect and ability to thrive in various environmental conditions make it a reliable option for those who may not always have time for intensive garden maintenance. Whether planted as a focal point in garden designs, incorporated into tropical-themed landscapes, or used to provide shade and visual interest in outdoor spaces, the Vanuatu Fan Palm adds an element of natural beauty and tranquility to any outdoor environment.",
                            Difficulty = 1,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/3.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Vanuatu Fan Palm",
                            ScientificName = "Licuala grandis"
                        },
                        new
                        {
                            Id = 10,
                            Description = "The Peruvian Apple Cactus, scientifically known as Cereus peruvianus, is a striking and low-maintenance succulent that adds a touch of desert charm to outdoor landscapes. With its tall, columnar stems adorned with spiny ridges and occasional blooms, this cactus species brings a unique aesthetic to gardens and arid landscapes. Caring for the Peruvian Apple Cactus is a breeze, as it falls under the category of easy-care plants. Its drought-tolerant nature and minimal water requirements make it an excellent choice for gardeners of all levels, including beginners looking to add a touch of exotic flair to their outdoor spaces. Thriving in environments with low humidity levels, the Peruvian Apple Cactus is well-suited for outdoor cultivation in arid or semi-arid regions. Its ability to withstand dry conditions ensures that it remains healthy and vibrant, even in landscapes where rainfall is scarce. Families with children can enjoy the presence of the Peruvian Apple Cactus, as it is considered safe and non-toxic. However, caution should be exercised due to its spiny exterior, particularly with young children who may be prone to touching or exploring the garden. For individuals with active lifestyles or frequent travelers, the Peruvian Apple Cactus is an ideal choice for outdoor landscaping. Its resilience to neglect and ability to thrive in harsh environmental conditions make it a reliable option for those who may not always have time for intensive garden maintenance. Whether planted as a focal point in xeriscapes, used to create natural barriers or borders, or simply allowed to flourish in its natural habitat, the Peruvian Apple Cactus adds an element of rugged beauty and resilience to any outdoor environment.",
                            Difficulty = 0,
                            Humidity = 0,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/4.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Peruvian apple cactus",
                            ScientificName = "Cereus Peruvianus"
                        },
                        new
                        {
                            Id = 11,
                            Description = "The Boston Fern, scientifically known as Nephrolepis exaltata, is a classic and elegant fern species renowned for its lush, arching fronds and delicate appearance. With its graceful foliage cascading from hanging baskets or adorning garden beds, this fern adds a touch of timeless beauty to both indoor and outdoor spaces. Caring for the Boston Fern requires a moderate level of attention, placing it in the medium difficulty category. While not overly demanding, it thrives in environments with high humidity levels and consistent moisture. Regular watering, protection from direct sunlight, and occasional fertilization contribute to its health and vitality. Thriving in environments with high humidity levels, the Boston Fern is well-suited for outdoor cultivation in shaded or partially shaded areas where moisture levels are naturally elevated. Its preference for humidity ensures that it remains lush and vibrant, even in outdoor landscapes where rainfall may be sporadic. Families with children can enjoy the presence of the Boston Fern, as it is considered safe and non-toxic. Its soft, feathery fronds make it a charming addition to gardens and outdoor spaces where children may play and explore. For individuals with active lifestyles or frequent travelers, the Boston Fern is a suitable choice for outdoor landscaping. While it may require regular watering and attention to humidity levels, its resilience to occasional neglect and ability to thrive in shaded environments make it a reliable option for those who may not always have time for intensive garden maintenance. Whether planted in shaded garden beds, displayed in hanging baskets on porches or patios, or incorporated into outdoor living spaces to add a touch of natural beauty, the Boston Fern brings a sense of tranquility and elegance to any outdoor environment.",
                            Difficulty = 1,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/5.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Boston Fern",
                            ScientificName = "Nephrolepis exaltata"
                        },
                        new
                        {
                            Id = 12,
                            Description = "The Kentia Palm, scientifically known as Howea forsteriana, is a majestic and iconic palm species that adds a touch of tropical elegance to outdoor landscapes. With its graceful fronds and slender, upright trunk, this palm exudes timeless beauty and sophistication, making it a cherished addition to gardens, patios, and outdoor living spaces. Caring for the Kentia Palm requires a moderate level of attention, placing it in the medium difficulty category. While not overly demanding, it thrives in environments with high humidity levels and consistent moisture. Regular watering, protection from direct sunlight, and occasional fertilization contribute to its health and vitality. Thriving in environments with high humidity levels, the Kentia Palm is well-suited for outdoor cultivation in tropical or subtropical climates. Its preference for humidity ensures that it remains lush and vibrant, even in outdoor landscapes where moisture levels may fluctuate. Families with children can enjoy the presence of the Kentia Palm, as it is considered safe and non-toxic. Its sturdy growth habit and graceful foliage make it a delightful addition to outdoor spaces where children may play and explore. For individuals with active lifestyles or frequent travelers, the Kentia Palm is a suitable choice for outdoor landscaping. While it may require regular watering and attention to humidity levels, its resilience to occasional neglect and ability to thrive in shaded environments make it a reliable option for those who may not always have time for intensive garden maintenance. Whether planted as a focal point in garden designs, incorporated into tropical-themed landscapes, or used to create natural shade and privacy in outdoor settings, the Kentia Palm brings a sense of tranquility and tropical allure to any outdoor environment.",
                            Difficulty = 1,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/6.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "Kentia Palm",
                            ScientificName = "Howea forsteriana"
                        },
                        new
                        {
                            Id = 13,
                            Description = "The ZZ Plant, scientifically known as Zamioculcas, is a resilient and versatile houseplant that effortlessly enhances both indoor and outdoor spaces with its striking appearance and minimal care requirements. With its glossy, dark green foliage and architectural silhouette, this plant adds a touch of contemporary elegance to any environment. Caring for the ZZ Plant is a breeze, as it falls under the category of easy-care plants. Its ability to thrive in low light conditions and tolerate infrequent watering makes it an ideal choice for busy individuals or those new to plant care. Thriving in environments with moderate humidity levels, the ZZ Plant is well-suited for placement both indoors and outdoors where moisture levels are relatively stable. Its adaptability to different humidity levels ensures that it remains healthy and vibrant in a variety of environments. Families with children can enjoy the presence of the ZZ Plant, as it is considered safe and non-toxic. Its sturdy growth habit and resilient nature make it a worry-free addition to indoor and outdoor spaces where children may be present. For individuals with active lifestyles or frequent travelers, the ZZ Plant is an excellent choice for both indoor and outdoor settings. Its ability to tolerate neglect and survive with minimal maintenance makes it a reliable option for those who may not always have time to dedicate to plant care. Whether placed as a potted specimen on patios, balconies, or used to create a lush, green backdrop in outdoor landscapes, the ZZ Plant adds a touch of modern sophistication and natural beauty to any outdoor environment.",
                            Difficulty = 0,
                            Humidity = 1,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/7.jpg",
                            IsTrending = true,
                            KidSafe = true,
                            Lifestyle = 2,
                            Name = "ZZ Plant",
                            ScientificName = "Zamioculcas"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Name: Caladium bicolor (Heart of Jesus)\r\nCare Level: Medium difficulty.\r\nRequires moderate attention.\r\nThrives in environments with high humidity levels and consistent moisture. Maintain humidity through regular misting or using a pebble tray.\r\nSuitability: Best suited for indoor cultivation.\r\nSuitable for individuals willing to provide necessary care for its stunning green foliage.",
                            Difficulty = 1,
                            Humidity = 2,
                            ImageUrl = "https://softuniproject.blob.core.windows.net/publicimages/9.jpg",
                            IsTrending = true,
                            KidSafe = false,
                            Lifestyle = 2,
                            Name = "Heart of Jesus",
                            ScientificName = "Caladium Bicolour"
                        });
                });

            modelBuilder.Entity("ApplicationUserPlant", b =>
                {
                    b.HasOne("Plants.Data.Models.Plant.Plant", null)
                        .WithMany()
                        .HasForeignKey("LikedPlantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersLikedPlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetPlant", b =>
                {
                    b.HasOne("Plants.Data.Models.Pet.Pet", null)
                        .WithMany()
                        .HasForeignKey("PetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plants.Data.Models.Plant.Plant", null)
                        .WithMany()
                        .HasForeignKey("PlantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetUserConfiguration", b =>
                {
                    b.HasOne("Plants.Data.Models.Pet.Pet", null)
                        .WithMany()
                        .HasForeignKey("PetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plants.Data.Models.ApplicationUser.UserConfiguration", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.Region", b =>
                {
                    b.HasOne("Plants.Data.Models.ApplicationUser.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.UserConfiguration", b =>
                {
                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", "ApplicationUser")
                        .WithOne("UserConfiguration")
                        .HasForeignKey("Plants.Data.Models.ApplicationUser.UserConfiguration", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plants.Data.Models.ApplicationUser.Region", "Region")
                        .WithMany("Users")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Plants.Data.Models.Comment.Comment", b =>
                {
                    b.HasOne("Plants.Data.Models.ApplicationUser.ApplicationUser", "ApplicationUser")
                        .WithMany("Comments")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plants.Data.Models.Plant.Plant", "Plant")
                        .WithMany("Comments")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.ApplicationUser", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("UserConfiguration");
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Plants.Data.Models.ApplicationUser.Region", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Plants.Data.Models.Plant.Plant", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
